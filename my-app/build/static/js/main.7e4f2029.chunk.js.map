{"version":3,"sources":["api.js","components/CarouselData.jsx","images/1.jpg","images/2.jpg","images/3.jpg","images/4.jpg","images/5.jpg","images/6.jpg","images/7.jpg","images/8.jpg","components/ImageCarousel.jsx","components/PostsList/styles.js","components/PostsList/PostsList.jsx","App.js","reportWebVitals.js","index.js"],"names":["request","url","a","fetch","response","ok","Error","status","statusText","json","getPosts","posts","CarouselData","ImageCarousel","slides","useState","current","setCurrent","length","Array","isArray","class","className","onClick","map","slide","index","src","alt","useStyles","makeStyles","theme","mainFeaturesPost","position","color","palette","common","white","marginBottom","spacing","backgroundSize","backgroundRepeat","backgroundPosition","overlay","top","bottom","right","left","backgroundColor","mainFeaturesPostContent","padding","marginTop","cardMedia","paddingTop","cardContent","flexGrow","cardGrid","postsList","PostsList","classes","setPosts","addOpen","setAddOpen","removeOpen","setRemoveOpen","handleAddClose","handleRemove","useCallback","id","newPostsList","filter","product","handleRemoveOpen","event","console","log","handleRemoveClose","mainContent","Container","maxWidth","Typography","variant","align","gutterBottom","mainButtons","Grid","container","justify","item","Button","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","margin","label","type","fullWidth","multiline","DialogActions","size","xs","sm","md","Card","card","CardMedia","image","title","CardContent","CardActions","DialogContentText","App","useEffect","then","postsData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e4f2029.chunk.js","sourcesContent":["const POSTS_URL = 'https://jsonplaceholder.typicode.com/posts/';\n\n\nconst request = async(url) => {\n  const response = await fetch(url);\n\n  if(!response.ok) {\n    throw new Error(\n      `${response.status} - ${response.statusText}`,\n    );\n  }\n\n  return response.json();\n};\n\nexport const getPosts = async() => {\n  const posts = await request(POSTS_URL);\n  return posts;\n}\n","import Image1 from \"../images/1.jpg\";\nimport Image2 from \"../images/2.jpg\";\nimport Image3 from \"../images/3.jpg\";\nimport Image4 from \"../images/4.jpg\";\nimport Image5 from \"../images/5.jpg\";\nimport Image6 from \"../images/6.jpg\";\nimport Image7 from \"../images/7.jpg\";\nimport Image8 from \"../images/8.jpg\";\n\nexport const CarouselData = [\n  Image1,\n  Image2,\n  Image3,\n  Image4,\n  Image5,\n  Image6,\n  Image7,\n  Image8\n];\n","export default __webpack_public_path__ + \"static/media/1.b8b10899.jpg\";","export default __webpack_public_path__ + \"static/media/2.2de20ff1.jpg\";","export default __webpack_public_path__ + \"static/media/3.ddbc9da8.jpg\";","export default __webpack_public_path__ + \"static/media/4.136a23b0.jpg\";","export default __webpack_public_path__ + \"static/media/5.1796def9.jpg\";","export default __webpack_public_path__ + \"static/media/6.aeeb7d93.jpg\";","export default __webpack_public_path__ + \"static/media/7.5ea61f50.jpg\";","export default __webpack_public_path__ + \"static/media/8.539853c0.jpg\";","import React, { useState } from 'react';\nimport { CarouselData } from './CarouselData';\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from 'react-icons/fa';\n\nconst ImageCarousel = ({ slides }) => {\n  const [current, setCurrent] = useState(0);\n  const length = slides.length;\n\n  const nextSlide = () => {\n    setCurrent(current === length - 1 ? 0 : current + 1);\n  };\n\n  const prevSlide = () => {\n    setCurrent(current === 0 ? length - 1 : current - 1);\n  };\n\n  if (!Array.isArray(slides) || slides.length <= 0) {\n    return null;\n  }\n\n  return (\n    <>\n    <h1 class=\"title\">Types of sports (in carousel):</h1>\n    <section className='slider'>\n      <FaArrowAltCircleLeft className='left-arrow' onClick={prevSlide} />\n      <FaArrowAltCircleRight className='right-arrow' onClick={nextSlide} />\n      {CarouselData.map((slide, index) => {\n        return (\n          <div\n            className={index === current ? 'slide active' : 'slide'}\n            key={index}\n          >\n            {index === current && (\n              <img src={slide} alt='sport image' className='image' />\n            )}\n          </div>\n        );\n      })}\n    </section>\n    </>\n  );\n};\n\nexport default ImageCarousel;","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n    mainFeaturesPost: {\n      position: \"relative\",\n      color: theme.palette.common.white,\n      marginBottom: theme.spacing(4),\n  \n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundPosition: \"center\",\n    },\n    overlay: {\n      position: \"absolute\",\n      top: 0,\n      bottom: 0,\n      right: 0,\n      left: 0,\n      backgroundColor: \"rgba(0,0,0,.3)\",\n    },\n    mainFeaturesPostContent: {\n      position: \"relative\",\n      padding: theme.spacing(6),\n      marginTop: theme.spacing(6),\n    },\n    cardMedia: {\n      paddingTop: \"55%\"\n    },\n    cardContent: {\n      flexGrow: 1\n    },\n    cardGrid: {\n      marginTop: theme.spacing(4),\n    }\n  }));\n","import React, { useState, useCallback } from 'react';\n\nimport { Box, Button, Card, CardActions, CardContent, CardMedia, Container, Dialog,\n  DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, TextField, Typography } from '@material-ui/core';\n\nimport { useStyles } from './styles';\n\nconst postsList = [1,2,3,4,5,6,7,8,9];\n\nexport const PostsList = () => {\n  const classes = useStyles();\n  const [posts, setPosts] = useState(postsList);\n  const [addOpen, setAddOpen] = useState(false);\n  const [removeOpen, setRemoveOpen] = useState(false);\n\n  const handleAddOpen = () => {\n    setAddOpen(true);\n  }\n\n  const handleAddClose = () => {\n    setAddOpen(false);\n  }\n\n  const handleRemove = useCallback((id) => {\n    const newPostsList = posts.filter(product => product !== id);\n    setPosts(newPostsList);\n    setRemoveOpen(false);\n  }, [posts]);\n\n  const handleRemoveOpen = (event) => {\n    console.log(event);\n    setRemoveOpen(true);\n  }\n\n  const handleRemoveClose = () => {\n    setRemoveOpen(false);\n  }\n\n  return (\n    <main>\n      <div className={classes.mainContent}>\n        <Container maxWidth=\"sm\">\n          <Typography\n            variant=\"h2\"\n            align=\"center\"\n            color=\"textPrimary\"\n            gutterBottom\n          >\n            Posts list\n          </Typography>\n          <div className={classes.mainButtons}>\n            <Grid container spacing={3} justify=\"center\">\n              <Grid item>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleAddOpen}\n                >\n                  Add post\n                </Button>\n                <Dialog\n                  open={addOpen}\n                  onClose={handleAddClose}\n                  aria-labelledby=\"form-dialog-title-add\"\n                >\n                  <DialogTitle id=\"add-dialog-title\">Add post</DialogTitle>\n                  <DialogContent>\n                    <TextField\n                      autoFocus\n                      margin=\"dense\"\n                      id=\"name\"\n                      label=\"Title\"\n                      type=\"text\"\n                      fullWidth\n                    />\n                    <TextField\n                      margin=\"dense\"\n                      id=\"description\"\n                      label=\"Body\"\n                      type=\"text\"\n                      fullWidth\n                      multiline\n                    />\n                    <TextField\n                      margin=\"dense\"\n                      id=\"description\"\n                      label=\"Image Url\"\n                      type=\"text\"\n                      fullWidth\n                    />\n\n                  </DialogContent>\n                  <DialogActions>\n                    <Button\n                      size=\"small\"\n                      color=\"primary\"\n                      // onClick={}\n                    >\n                      Save\n                    </Button>\n                    <Button\n                      size=\"small\"\n                      onClick={handleAddClose}\n                      color=\"secondary\"\n                    >\n                      Cancel\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n              </Grid>\n            </Grid>\n          </div>\n        </Container>\n      </div>\n\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        <Grid container spacing={4}>\n          {posts.map((product) => (\n            <Grid item key={product} xs={12} sm={6} md={4}>\n              <Card className={classes.card}>\n                <CardMedia\n                  className={classes.cardMedia}\n                  image=\"https://picsum.photos/200/300\"\n                  title=\"Image title\"\n                />\n                <CardContent className={classes.cardContent}>\n                  <Typography variant=\"h5\" gutterBottom>\n                    Post title\n                  </Typography>\n                  <Typography>\n                    Post body\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button\n                    size=\"small\"\n                    color=\"secondary\"\n                    onClick={handleRemoveOpen}\n                  >\n                    Remove\n                  </Button>\n                  <Dialog\n                    open={removeOpen}\n                    onClose={handleRemoveClose}\n                    aria-labelledby=\"form-dialog-title\"\n                  >\n                    <DialogTitle id=\"remove-dialog-title\">Remove the post</DialogTitle>\n                    <DialogContent>\n                      <DialogContentText>Are you sure you want to remove the post?</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                      <Button\n                        size=\"small\"\n                        color=\"secondary\"\n                        onClick={() => handleRemove(product)}\n                      >\n                        Remove\n                      </Button>\n                      <Button\n                        size=\"small\"\n                        onClick={handleRemoveClose}\n                        color=\"primary\"\n                      >\n                        Cancel\n                      </Button>\n                    </DialogActions>\n                  </Dialog>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </main>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { getPosts } from './api';\nimport './App.css';\nimport ImageCarousel from './components/ImageCarousel';\nimport { CarouselData } from './components/CarouselData';\nimport { PostsList } from './components/PostsList/index';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    getPosts().then((postsData) => {\n      setPosts(postsData);\n    });\n  }, [])\n\n\n  return (\n    posts.length > 0\n    ? (\n      <>\n        <PostsList />\n        <ImageCarousel slides={CarouselData} />\n      </>\n    )\n    : null\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}